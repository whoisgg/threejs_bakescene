import { AstNode, Program } from '../ast';
import { Parse, ParserOptions } from './parser';
import { FunctionScopeIndex, Scope, ScopeIndex } from './scope';
export declare const inspect: (arg: any) => void;
export declare const nextWarn: () => () => any;
export declare const buildParser: () => {
    parse: Parse;
    parser: any;
    parseSrc: ParseSrc;
    debugSrc: (src: string) => void;
    debugStatement: (stmt: AstNode) => void;
    expectParsedStatement: (src: string, options?: {}) => void;
    parseStatement: (src: string, options?: ParserOptions) => Program;
    expectParsedProgram: (src: string, options?: ParserOptions) => void;
};
export declare const debugEntry: (bindings: ScopeIndex) => string[];
export declare const debugFunctionEntry: (bindings: FunctionScopeIndex) => string[];
export declare const debugScopes: (astOrScopes: Program | Scope[]) => void;
type ParseSrc = (src: string, options?: ParserOptions) => Program;
export {};
